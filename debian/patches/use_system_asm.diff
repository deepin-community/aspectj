Description: Use system ASM3 instead of AspectJ copy
Author: Damien Raude-Morvan <drazzib@debian.org>
Last-Updated: 2011-11-23
Forwarded: no
--- a/weaver/src/org/aspectj/weaver/bcel/asm/AsmDetector.java
+++ b/weaver/src/org/aspectj/weaver/bcel/asm/AsmDetector.java
@@ -24,8 +24,8 @@
 
 	static {
 		try {
-			Class<?> reader = Class.forName("aj.org.objectweb.asm.ClassReader");
-			Class<?> visitor = Class.forName("aj.org.objectweb.asm.ClassVisitor");
+			Class<?> reader = Class.forName("org.objectweb.asm.ClassReader");
+			Class<?> visitor = Class.forName("org.objectweb.asm.ClassVisitor");
 			Method m = reader.getMethod("accept", new Class[] { visitor, Integer.TYPE });
 			isAsmAround = m != null;
 		} catch (Exception e) {
--- a/weaver/src/org/aspectj/weaver/bcel/asm/StackMapAdder.java
+++ b/weaver/src/org/aspectj/weaver/bcel/asm/StackMapAdder.java
@@ -15,11 +15,11 @@
 import org.aspectj.weaver.UnresolvedType;
 import org.aspectj.weaver.World;
 
-import aj.org.objectweb.asm.ClassReader;
-import aj.org.objectweb.asm.ClassVisitor;
-import aj.org.objectweb.asm.ClassWriter;
-import aj.org.objectweb.asm.MethodVisitor;
-import aj.org.objectweb.asm.Opcodes;
+import org.objectweb.asm.ClassReader;
+import org.objectweb.asm.ClassVisitor;
+import org.objectweb.asm.ClassWriter;
+import org.objectweb.asm.MethodVisitor;
+import org.objectweb.asm.Opcodes;
 
 /**
  * Uses asm to add the stack map attribute to methods in a class. The class is passed in as pure byte data and then a reader/writer
@@ -54,7 +54,7 @@
 	private static class AspectJClassVisitor extends ClassVisitor {
 
 		public AspectJClassVisitor(ClassVisitor classwriter) {
-			super(Opcodes.ASM7, classwriter);
+			super(Opcodes.ASM6, classwriter);
 		}
 
 		@Override
@@ -67,7 +67,7 @@
 		// created by a ClassWriter (see top level class comment)
 		static class AJMethodVisitor extends MethodVisitor {
 			public AJMethodVisitor(MethodVisitor mv) {
-				super(Opcodes.ASM7,mv);
+				super(Opcodes.ASM6,mv);
 			}
 		}
 		
